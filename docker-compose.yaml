services:
  app:
    image: node:alpine
    env_file: .env
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app
    command: npm start
    user: node
    ports:
      - 3000:3000

  strapi:
    container_name: strapi
    build:
      context: ./strapi
      dockerfile: Dockerfile
    image: strapi:latest
    user: node
    restart: unless-stopped
    env_file:
        - .env
        - strapi/.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: db
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./strapi/config:/opt/app/config
      - ./strapi/src:/opt/app/src
      - ./strapi/package.json:/opt/package.json
      - ./strapi/yarn.lock:/opt/yarn.lock
      - ./strapi/.env:/opt/app/.env
      - ./strapi/public/uploads:/opt/app/public/uploads
    ports:
      - '1337:1337'
    depends_on:
      - db

  db:
    platform: linux/amd64 # for platform error on Apple M1 chips
    restart: unless-stopped
    env_file: .env
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - '5432:5432'

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - '9090:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=${DATABASE_HOST}
    depends_on:
      - db

volumes:
  strapi-data:
